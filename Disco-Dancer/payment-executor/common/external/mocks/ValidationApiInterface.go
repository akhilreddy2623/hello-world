// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import (
	app "geico.visualstudio.com/Billing/plutus/payment-executor-common/models/app"

	mock "github.com/stretchr/testify/mock"

	commonAppModels "geico.visualstudio.com/Billing/plutus/common-models/app"
)

// ValidationApiInterface is an autogenerated mock type for the ValidationApiInterface type
type ValidationApiInterface struct {
	mock.Mock
}

// ForteValidation provides a mock function with given fields: forteRequest
func (_m *ValidationApiInterface) ForteValidation(forteRequest app.ForteRequest) (*commonAppModels.ForteResponse, error) {
	ret := _m.Called(forteRequest)

	if len(ret) == 0 {
		panic("no return value specified for ForteValidation")
	}

	var r0 *commonAppModels.ForteResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(app.ForteRequest) (*commonAppModels.ForteResponse, error)); ok {
		return rf(forteRequest)
	}
	if rf, ok := ret.Get(0).(func(app.ForteRequest) *commonAppModels.ForteResponse); ok {
		r0 = rf(forteRequest)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*commonAppModels.ForteResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(app.ForteRequest) error); ok {
		r1 = rf(forteRequest)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewValidationApiInterface creates a new instance of ValidationApiInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewValidationApiInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *ValidationApiInterface {
	mock := &ValidationApiInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
