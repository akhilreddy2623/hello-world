// Code generated by mockery v2.44.2. DO NOT EDIT.

package mocks

import (
	db "geico.visualstudio.com/Billing/plutus/payment-administrator-common/models/db"

	mock "github.com/stretchr/testify/mock"
)

// PaymentHandlerInterface is an autogenerated mock type for the PaymentHandlerInterface type
type PaymentHandlerInterface struct {
	mock.Mock
}

// PublishPaymentBalancingEventMessage provides a mock function with given fields: payments, incomingPaymentRequest
func (_m *PaymentHandlerInterface) PublishPaymentBalancingEventMessage(payments []db.Payment, incomingPaymentRequest db.IncomingPaymentRequest) error {
	ret := _m.Called(payments, incomingPaymentRequest)

	if len(ret) == 0 {
		panic("no return value specified for PublishPaymentBalancingEventMessage")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func([]db.Payment, db.IncomingPaymentRequest) error); ok {
		r0 = rf(payments, incomingPaymentRequest)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewPaymentHandlerInterface creates a new instance of PaymentHandlerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPaymentHandlerInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *PaymentHandlerInterface {
	mock := &PaymentHandlerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
