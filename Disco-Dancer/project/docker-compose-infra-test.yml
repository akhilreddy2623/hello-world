version: '3'

services:
  postgres:
    container_name: pmt-postgres-test
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: nymeria
      POSTGRES_PASSWORD: zCXbDWt4H7%i^e
      POSTGRES_DB: postgresdb
  kafka:
    container_name: pmt-kafka-test
    image: confluentinc/cp-kafka:7.5.1
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:9092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  zookeeper:
    container_name: pmt-zookeeper-test
    image: confluentinc/cp-zookeeper:7.5.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka-ui:
    container_name: pmt-kafkaui-test
    image: provectuslabs/kafka-ui:latest
    ports:
      - 9086:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      DYNAMIC_CONFIG_ENABLED: 'true'
  
  # close other pgadmin browser tabs before login in to this one
  pgadmin:
    container_name: pmt-pgadmin-test
    image: dpage/pgadmin4
    user: root
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      PGADMIN_DEFAULT_EMAIL: test@geico.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8889:80"

  voltage-server:
    # specify the file paths you want to source configuration from
    command: [ "/config/secrets.properties" ]
    environment:
      SERVER_PORT: 8080
      JAVA_TOOL_OPTIONS: >-
        -agentlib:jdwp=transport=dt_socket,address=*:8787,server=y,suspend=n
      VOLTAGE_TRUSTSTORE_PATH: /user/lib/ssl/certs # trust store should have been set in the image, but it's not
      VOLTAGE_ENVIRONMENT: NON_PRODUCTION
      VOLTAGE_APPLICATION_NAME: voltage-sidecar-go-client-test
      VOLTAGE_APPLICATION_VERSION: 1.0.0
      VOLTAGE_GRPC_SERVER_SOCKET_TYPE: tcp # uds (unix domain socket) or tcp
      VOLTAGE_GRPC_SERVER_SOCKET_PATH: /tmp/voltage-grpc-server.sock # uds only
      VOLTAGE_GRPC_SERVER_SOCKET_HOST: 0.0.0.0 # tcp only
      VOLTAGE_GRPC_SERVER_SOCKET_PORT: 50051 # tcp only
      VOLTAGE_HEALTHCHECK_SENSITIVEELEMENTNAME: EmailAddress
      VOLTAGE_HEALTHCHECK_PLAINTEXT: alice@example.com
      
    extra_hosts:
      - host.docker.internal:host-gateway
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/ready" ]
      interval: 10s
      timeout: 10s
      retries: 3
    image: artifactory-pd-infra.aks.aze1.cloud.geico.net/mvp-billing-container-all/iaas-cryptography-services/grpc-voltage-server
    platform: linux/amd64
    ports:
      - "8080:8080"
      # grpc over tcp (if enabled)
      - "50051:50051"
      # debug
      - "48787:8787"
    volumes:
      - "./config:/config:ro"
      # for uds only (mounts socket path), will not work on Mac when attempting to connect from your local machine to the VM.
      - "/tmp:/tmp"

  payment-vault-api:
    container_name: pmt-vault-test
    build:
      context: ./../payment-vault
      dockerfile: ./../payment-vault/api/vault-api.local.dockerfile
    restart: always
    environment:
      environment: integ
    ports:
      - "8082:30000"
      - "9092:5051"
    deploy:
      mode: replicated
      replicas: 1