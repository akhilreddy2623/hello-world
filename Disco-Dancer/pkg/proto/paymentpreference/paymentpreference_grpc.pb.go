// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package paymentpreference

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PaymentPreferenceServiceClient is the client API for PaymentPreferenceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PaymentPreferenceServiceClient interface {
	GetPaymentPreference(ctx context.Context, in *PaymentPreferenceRequest, opts ...grpc.CallOption) (*PaymentPreferenceResponse, error)
}

type paymentPreferenceServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPaymentPreferenceServiceClient(cc grpc.ClientConnInterface) PaymentPreferenceServiceClient {
	return &paymentPreferenceServiceClient{cc}
}

func (c *paymentPreferenceServiceClient) GetPaymentPreference(ctx context.Context, in *PaymentPreferenceRequest, opts ...grpc.CallOption) (*PaymentPreferenceResponse, error) {
	out := new(PaymentPreferenceResponse)
	err := c.cc.Invoke(ctx, "/paymentpreference.PaymentPreferenceService/GetPaymentPreference", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PaymentPreferenceServiceServer is the server API for PaymentPreferenceService service.
// All implementations must embed UnimplementedPaymentPreferenceServiceServer
// for forward compatibility
type PaymentPreferenceServiceServer interface {
	GetPaymentPreference(context.Context, *PaymentPreferenceRequest) (*PaymentPreferenceResponse, error)
	mustEmbedUnimplementedPaymentPreferenceServiceServer()
}

// UnimplementedPaymentPreferenceServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPaymentPreferenceServiceServer struct {
}

func (UnimplementedPaymentPreferenceServiceServer) GetPaymentPreference(context.Context, *PaymentPreferenceRequest) (*PaymentPreferenceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPaymentPreference not implemented")
}
func (UnimplementedPaymentPreferenceServiceServer) mustEmbedUnimplementedPaymentPreferenceServiceServer() {
}

// UnsafePaymentPreferenceServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PaymentPreferenceServiceServer will
// result in compilation errors.
type UnsafePaymentPreferenceServiceServer interface {
	mustEmbedUnimplementedPaymentPreferenceServiceServer()
}

func RegisterPaymentPreferenceServiceServer(s grpc.ServiceRegistrar, srv PaymentPreferenceServiceServer) {
	s.RegisterService(&PaymentPreferenceService_ServiceDesc, srv)
}

func _PaymentPreferenceService_GetPaymentPreference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaymentPreferenceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentPreferenceServiceServer).GetPaymentPreference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paymentpreference.PaymentPreferenceService/GetPaymentPreference",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentPreferenceServiceServer).GetPaymentPreference(ctx, req.(*PaymentPreferenceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PaymentPreferenceService_ServiceDesc is the grpc.ServiceDesc for PaymentPreferenceService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PaymentPreferenceService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "paymentpreference.PaymentPreferenceService",
	HandlerType: (*PaymentPreferenceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPaymentPreference",
			Handler:    _PaymentPreferenceService_GetPaymentPreference_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "paymentpreference.proto",
}
