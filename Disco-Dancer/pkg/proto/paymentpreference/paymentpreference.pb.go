// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: paymentpreference.proto

package paymentpreference

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PaymentPreferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId             string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	ProductIdentifier  string `protobuf:"bytes,2,opt,name=productIdentifier,proto3" json:"productIdentifier,omitempty"`
	TransactionType    string `protobuf:"bytes,3,opt,name=transactionType,proto3" json:"transactionType,omitempty"`
	PaymentRequestType string `protobuf:"bytes,4,opt,name=paymentRequestType,proto3" json:"paymentRequestType,omitempty"`
}

func (x *PaymentPreferenceRequest) Reset() {
	*x = PaymentPreferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paymentpreference_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentPreferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentPreferenceRequest) ProtoMessage() {}

func (x *PaymentPreferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paymentpreference_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentPreferenceRequest.ProtoReflect.Descriptor instead.
func (*PaymentPreferenceRequest) Descriptor() ([]byte, []int) {
	return file_paymentpreference_proto_rawDescGZIP(), []int{0}
}

func (x *PaymentPreferenceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PaymentPreferenceRequest) GetProductIdentifier() string {
	if x != nil {
		return x.ProductIdentifier
	}
	return ""
}

func (x *PaymentPreferenceRequest) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *PaymentPreferenceRequest) GetPaymentRequestType() string {
	if x != nil {
		return x.PaymentRequestType
	}
	return ""
}

type PaymentPreference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentMethodType      string                 `protobuf:"bytes,1,opt,name=paymentMethodType,proto3" json:"paymentMethodType,omitempty"`
	AccountIdentifier      string                 `protobuf:"bytes,2,opt,name=accountIdentifier,proto3" json:"accountIdentifier,omitempty"`
	RoutingNumber          string                 `protobuf:"bytes,3,opt,name=routingNumber,proto3" json:"routingNumber,omitempty"`
	PaymentExtendedData    string                 `protobuf:"bytes,4,opt,name=paymentExtendedData,proto3" json:"paymentExtendedData,omitempty"`
	WalletStatus           bool                   `protobuf:"varint,5,opt,name=walletStatus,proto3" json:"walletStatus,omitempty"`
	PaymentMethodStatus    string                 `protobuf:"bytes,6,opt,name=paymentMethodStatus,proto3" json:"paymentMethodStatus,omitempty"`
	AccountValidationDate  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=accountValidationDate,proto3" json:"accountValidationDate,omitempty"`
	WalletAccess           bool                   `protobuf:"varint,8,opt,name=walletAccess,proto3" json:"walletAccess,omitempty"`
	AutoPayPreference      bool                   `protobuf:"varint,9,opt,name=autoPayPreference,proto3" json:"autoPayPreference,omitempty"`
	Split                  int32                  `protobuf:"varint,10,opt,name=split,proto3" json:"split,omitempty"`
	Last4AccountIdentifier string                 `protobuf:"bytes,11,opt,name=last4AccountIdentifier,proto3" json:"last4AccountIdentifier,omitempty"`
}

func (x *PaymentPreference) Reset() {
	*x = PaymentPreference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paymentpreference_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentPreference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentPreference) ProtoMessage() {}

func (x *PaymentPreference) ProtoReflect() protoreflect.Message {
	mi := &file_paymentpreference_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentPreference.ProtoReflect.Descriptor instead.
func (*PaymentPreference) Descriptor() ([]byte, []int) {
	return file_paymentpreference_proto_rawDescGZIP(), []int{1}
}

func (x *PaymentPreference) GetPaymentMethodType() string {
	if x != nil {
		return x.PaymentMethodType
	}
	return ""
}

func (x *PaymentPreference) GetAccountIdentifier() string {
	if x != nil {
		return x.AccountIdentifier
	}
	return ""
}

func (x *PaymentPreference) GetRoutingNumber() string {
	if x != nil {
		return x.RoutingNumber
	}
	return ""
}

func (x *PaymentPreference) GetPaymentExtendedData() string {
	if x != nil {
		return x.PaymentExtendedData
	}
	return ""
}

func (x *PaymentPreference) GetWalletStatus() bool {
	if x != nil {
		return x.WalletStatus
	}
	return false
}

func (x *PaymentPreference) GetPaymentMethodStatus() string {
	if x != nil {
		return x.PaymentMethodStatus
	}
	return ""
}

func (x *PaymentPreference) GetAccountValidationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.AccountValidationDate
	}
	return nil
}

func (x *PaymentPreference) GetWalletAccess() bool {
	if x != nil {
		return x.WalletAccess
	}
	return false
}

func (x *PaymentPreference) GetAutoPayPreference() bool {
	if x != nil {
		return x.AutoPayPreference
	}
	return false
}

func (x *PaymentPreference) GetSplit() int32 {
	if x != nil {
		return x.Split
	}
	return 0
}

func (x *PaymentPreference) GetLast4AccountIdentifier() string {
	if x != nil {
		return x.Last4AccountIdentifier
	}
	return ""
}

type PaymentPreferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentPreference []*PaymentPreference `protobuf:"bytes,1,rep,name=paymentPreference,proto3" json:"paymentPreference,omitempty"`
}

func (x *PaymentPreferenceResponse) Reset() {
	*x = PaymentPreferenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paymentpreference_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentPreferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentPreferenceResponse) ProtoMessage() {}

func (x *PaymentPreferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paymentpreference_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentPreferenceResponse.ProtoReflect.Descriptor instead.
func (*PaymentPreferenceResponse) Descriptor() ([]byte, []int) {
	return file_paymentpreference_proto_rawDescGZIP(), []int{2}
}

func (x *PaymentPreferenceResponse) GetPaymentPreference() []*PaymentPreference {
	if x != nil {
		return x.PaymentPreference
	}
	return nil
}

var File_paymentpreference_proto protoreflect.FileDescriptor

var file_paymentpreference_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xba, 0x01, 0x0a, 0x18,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x28,
	0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8f, 0x04, 0x0a, 0x11, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2c,
	0x0a, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x30, 0x0a, 0x13, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x50, 0x0a, 0x15, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x15, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2c,
	0x0a, 0x11, 0x61, 0x75, 0x74, 0x6f, 0x50, 0x61, 0x79, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x61, 0x75, 0x74, 0x6f, 0x50,
	0x61, 0x79, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x70, 0x6c, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x70, 0x6c,
	0x69, 0x74, 0x12, 0x36, 0x0a, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x34, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x34, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x6f, 0x0a, 0x19, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x32, 0x8d, 0x01, 0x0a, 0x18,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x71, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x2b, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x15, 0x5a, 0x13, 0x2e,
	0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_paymentpreference_proto_rawDescOnce sync.Once
	file_paymentpreference_proto_rawDescData = file_paymentpreference_proto_rawDesc
)

func file_paymentpreference_proto_rawDescGZIP() []byte {
	file_paymentpreference_proto_rawDescOnce.Do(func() {
		file_paymentpreference_proto_rawDescData = protoimpl.X.CompressGZIP(file_paymentpreference_proto_rawDescData)
	})
	return file_paymentpreference_proto_rawDescData
}

var file_paymentpreference_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_paymentpreference_proto_goTypes = []interface{}{
	(*PaymentPreferenceRequest)(nil),  // 0: paymentpreference.PaymentPreferenceRequest
	(*PaymentPreference)(nil),         // 1: paymentpreference.PaymentPreference
	(*PaymentPreferenceResponse)(nil), // 2: paymentpreference.PaymentPreferenceResponse
	(*timestamppb.Timestamp)(nil),     // 3: google.protobuf.Timestamp
}
var file_paymentpreference_proto_depIdxs = []int32{
	3, // 0: paymentpreference.PaymentPreference.accountValidationDate:type_name -> google.protobuf.Timestamp
	1, // 1: paymentpreference.PaymentPreferenceResponse.paymentPreference:type_name -> paymentpreference.PaymentPreference
	0, // 2: paymentpreference.PaymentPreferenceService.GetPaymentPreference:input_type -> paymentpreference.PaymentPreferenceRequest
	2, // 3: paymentpreference.PaymentPreferenceService.GetPaymentPreference:output_type -> paymentpreference.PaymentPreferenceResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_paymentpreference_proto_init() }
func file_paymentpreference_proto_init() {
	if File_paymentpreference_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_paymentpreference_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentPreferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paymentpreference_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentPreference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paymentpreference_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentPreferenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_paymentpreference_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_paymentpreference_proto_goTypes,
		DependencyIndexes: file_paymentpreference_proto_depIdxs,
		MessageInfos:      file_paymentpreference_proto_msgTypes,
	}.Build()
	File_paymentpreference_proto = out.File
	file_paymentpreference_proto_rawDesc = nil
	file_paymentpreference_proto_goTypes = nil
	file_paymentpreference_proto_depIdxs = nil
}
